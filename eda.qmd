---
title: "EDA"
format: html
number-sections: false
---
```{python, include=false}
# Data preperation lines, not outputted on final report
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

s1_df = pd.read_csv("../project/EDA/Data/catapult_s1.csv")
s1_df = pd.DataFrame(s1_df)

s2_df = pd.read_csv("../project/EDA/Data/catapult_s2.csv")
s2_df = pd.DataFrame(s2_df)

s1_df['Season'] = 'Season 1'
s2_df['Season'] = 'Season 2'
df = pd.concat([s1_df, s2_df], ignore_index=True)

df = df[['Date', 'Season', 'About', 'Position', 'Period Number', 'Period', 'Total Player Load', 'Player Load Per Minute', 'IMA Accel High', 'IMA Jump Count High Band', 'Session Total Jumps']]

df['Date'] = pd.to_datetime(df['Date'])

df = df.drop_duplicates()

df = df[df['About'] != 'Ben Vander Plas']

forward_df = df[df['Position'] == 'Forward']
guard_df = df[df['Position'] == 'Guard']
center_df = df[df['Position'] == 'Center']

mask = df['Period'].str.contains(r'\bperiod\b\s*\d*', case=False, na=False)
games_df = df[mask]
practice_df = df[~mask]
```

### Descriptive Statistics & Distributions


```{python}
# Pulling out key numeric variables
vars_list = ['Total Player Load', 'Player Load Per Minute', 'IMA Accel High', 'IMA Jump Count High Band', 'Session Total Jumps']
```

```{python}
forward_df.describe(include=[int, float])
```

```{python}
center_df.describe(include=[int, float])
```

```{python}
guard_df.describe(include=[int, float])
```

Mean total player load is highest for forwards, but they also have more variance. It seems that centers have more high band jumps and high accelerations than forwards, indicating that they may not be exerting much effort. We will proceed by exploring our forwards dataframe.

```{python}
sns.lineplot(data=forward_df, x='Period Number', y='Player Load Per Minute', hue='About', legend=False, alpha=0.5)
sns.despine()
plt.title("PlayerLoad by Period")
plt.xticks(ticks=[3, 6, 9, 12, 15, 18], labels=['3', '6', '9', '12', '15','18'])
plt.show()
```

We can see that PlayerLoad does change by period, peaking with periods around 2. From our dataframe it appears these are the game periods, indicating higher effort exerted during games than practices by forwards. This should be noted as we progress throughout our project.

```{python}
fig, axes = plt.subplots(len(vars_list), 1, figsize=(4, 2*len(vars_list)))

for i, column in enumerate(vars_list):
    sns.kdeplot(forward_df[column], ax=axes[i], color='orange')
    axes[i].set_title(f'Density Plot of {column}')
    axes[i].spines['top'].set_visible(False)
    axes[i].spines['right'].set_visible(False)

plt.tight_layout()
plt.show()
```

Session total jumps appears to be roughly normally distributed here, as well as player load per minute. Our other variables are skewed to the right, indicating we have high outliers. We can look at boxplots of our skewed variables to explore this further.

```{python}
sns.boxplot(forward_df['Total Player Load'])
plt.title('Boxplot of Total Player Load')
sns.despine()
plt.show()
```

```{python}
sns.boxplot(forward_df['IMA Accel High'])
plt.title('Boxplot of IMA Accel High')
sns.despine()
plt.show()
```

```{python}
sns.boxplot(forward_df['IMA Jump Count High Band'])
plt.title('Boxplot of IMA Jump Count High Band')
sns.despine()
plt.show()

```

There are clearly many high outliers in our data set

```{python}
#games_df = df[df['Period'].isin(['2. Period 1', '3. Period 2', '1. Warmup'])]
#practice_df = df[~df['Period'].isin(['2. Period 1', '3. Period 2', '1. Warmup'])]

# need to ask questions about how the data is formatted. we want to split it up into practice and games but there are so many unique 
# identifiers for period that we are unsure how to best go about this.
```

### Exploring relationships between our variables

```{python}
# Pairplots showing correlation between our key variables
key_vars_df = forward_df[vars_list]
sns.pairplot(key_vars_df, plot_kws={'color': 'orange'})
plt.show()
```

From the pair plots it can be seen that there is a moderate correlation between Total Player Load and IMA Accel High. Other than that there are no relationships that seem to show great correlation between our variables. Collinearity does not appear to be of concern but we can look at a heatmap of our most important variables to explore more precise values.

```{python}
selected_cols = ['Player Load Per Minute', 'IMA Accel High', 'IMA Jump Count High Band']
key_corr = forward_df[selected_cols].corr()

sns.heatmap(key_corr, annot=True, cmap='coolwarm')
plt.title("Correlation Between Acceleration Metrics")
plt.xticks([0, 1, 2], ['PL/min', 'Accel High', 'High band Jump'], rotation=0)
plt.yticks([0, 1, 2], ['PL/min', 'Accel High', 'High band Jump'], rotation=0)
plt.show()

```

None of the correlations between our selected variables are very high so we do not need to look into causal relationships.
